># Multi-line constructs
#^^^^^^^^^^^^^^^^^^^^^^^ source.just comment.line.number-sign.just
>
># TODO: do we need to validate this?
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.just comment.line.number-sign.just
># TODO: should just-specific highlighting in recipes be conditional (ex. only in interpolation blocks)
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.just comment.line.number-sign.just
># or always on?
#^^^^^^^^^^^^^^^ source.just comment.line.number-sign.just
>
>multi-line-recipe:
#^^^^^^^^^^^^^^^^^ source.just entity.name.function.just
#                 ^ source.just keyword.operator.recipe.end.just
>  if true; then \
#^^ source.just
#  ^^ source.just keyword.control.conditional.just
#    ^ source.just
#     ^^^^ source.just constant.language.boolean.just
#         ^^^^^^^^^ source.just
>    echo 'True!'; \
#^^^^^^^^^ source.just
#         ^ source.just string.quoted.single.just string.quoted.single.just
#          ^^^^^ source.just string.quoted.single.just
#               ^ source.just string.quoted.single.just
#                ^^^^ source.just
>  fi
#^^^^^ source.just
>
>
># Parenthesis blocks don't need explicit line breaks
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.just comment.line.number-sign.just
>
>abc := ('a' +
#^^^ source.just variable.other.just
#   ^ source.just
#    ^^ source.just keyword.operator.assignment.just
#      ^^ source.just
#        ^ source.just string.quoted.single.just string.quoted.single.just
#         ^ source.just string.quoted.single.just
#          ^ source.just string.quoted.single.just
#           ^ source.just
#            ^ source.just keyword.operator.concat.just
>        'b'
#^^^^^^^^ source.just
#        ^ source.just string.quoted.single.just string.quoted.single.just
#         ^ source.just string.quoted.single.just
#          ^ source.just string.quoted.single.just
>         + 'c')
#^^^^^^^^^ source.just
#         ^ source.just keyword.operator.concat.just
#          ^ source.just
#           ^ source.just string.quoted.single.just string.quoted.single.just
#            ^ source.just string.quoted.single.just
#             ^ source.just string.quoted.single.just
#              ^^ source.just
>
>abc2 := (
#^^^^ source.just variable.other.just
#    ^ source.just
#     ^^ source.just keyword.operator.assignment.just
#       ^^ source.just
>  'a' +
#^^ source.just
#  ^ source.just string.quoted.single.just string.quoted.single.just
#   ^ source.just string.quoted.single.just
#    ^ source.just string.quoted.single.just
#     ^ source.just
#      ^ source.just keyword.operator.concat.just
>  'b' +
#^^ source.just
#  ^ source.just string.quoted.single.just string.quoted.single.just
#   ^ source.just string.quoted.single.just
#    ^ source.just string.quoted.single.just
#     ^ source.just
#      ^ source.just keyword.operator.concat.just
>  'c'
#^^ source.just
#  ^ source.just string.quoted.single.just string.quoted.single.just
#   ^ source.just string.quoted.single.just
#    ^ source.just string.quoted.single.just
>)
#^^ source.just
>
># TODO: multi-line recipe def broken
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.just comment.line.number-sign.just
>
>foo param=('foo'
#^^^^^^^^^^ source.just
#          ^ source.just
#           ^ source.just string.quoted.single.just string.quoted.single.just
#            ^^^ source.just string.quoted.single.just
#               ^ source.just string.quoted.single.just
>      + 'bar'
#^^^^^^ source.just
#      ^ source.just keyword.operator.concat.just
#       ^ source.just
#        ^ source.just string.quoted.single.just string.quoted.single.just
#         ^^^ source.just string.quoted.single.just
#            ^ source.just string.quoted.single.just
>    ):
#^^^^ source.just
#    ^ source.just
#     ^^ source.just
>  echo {{param}}
#^^^^^^^ source.just
#       ^^ source.just string.interpolated.escaping.just string.interpolated.escape.just
#         ^^^^^ source.just string.interpolated.escaping.just
#              ^^ source.just string.interpolated.escaping.just string.interpolated.escape.just
>
>bar: (foo
#^^^ source.just entity.name.function.just
#   ^ source.just keyword.operator.recipe.end.just
#    ^^ source.just
#      ^^^ source.just entity.name.function.just
>        'Foo'
#^^^^^^^^ source.just
#        ^ source.just string.quoted.single.just string.quoted.single.just
#         ^^^ source.just string.quoted.single.just
#            ^ source.just string.quoted.single.just
>     )
#^^^^^^^ source.just
>  echo 'Bar!'
#^^^^^^^ source.just
#       ^ source.just string.quoted.single.just string.quoted.single.just
#        ^^^^ source.just string.quoted.single.just
#            ^ source.just string.quoted.single.just
>
># Backslash continues as if whitespace
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.just comment.line.number-sign.just
>
>a := 'foo' + \
#^ source.just variable.other.just
# ^ source.just
#  ^^ source.just keyword.operator.assignment.just
#    ^ source.just
#     ^ source.just string.quoted.single.just string.quoted.single.just
#      ^^^ source.just string.quoted.single.just
#         ^ source.just string.quoted.single.just
#          ^ source.just
#           ^ source.just keyword.operator.concat.just
#            ^^ source.just
>     'bar'
#^^^^^ source.just
#     ^ source.just string.quoted.single.just string.quoted.single.just
#      ^^^ source.just string.quoted.single.just
#         ^ source.just string.quoted.single.just
>
>foo param1 \
#^^^^^^^^^^^^^ source.just
>  param2='foo' \
#^^^^^^^^^ source.just
#         ^ source.just string.quoted.single.just string.quoted.single.just
#          ^^^ source.just string.quoted.single.just
#             ^ source.just string.quoted.single.just
#              ^^^ source.just
>  *varparam='': dep1 \
#^^^^^^^^^^^^ source.just
#            ^ source.just string.quoted.single.just string.quoted.single.just
#             ^ source.just string.quoted.single.just
#              ^^^^^^^^^ source.just
>                (dep2 'foo')
#^^^^^^^^^^^^^^^^ source.just
#                ^ source.just
#                 ^^^^^ source.just
#                      ^ source.just string.quoted.single.just string.quoted.single.just
#                       ^^^ source.just string.quoted.single.just
#                          ^ source.just string.quoted.single.just
#                           ^ source.just
>  echo {{param1}} {{param2}} {{varparam}}
#^^^^^^^ source.just
#       ^^ source.just string.interpolated.escaping.just string.interpolated.escape.just
#         ^^^^^^ source.just string.interpolated.escaping.just
#               ^^ source.just string.interpolated.escaping.just string.interpolated.escape.just
#                 ^ source.just
#                  ^^ source.just string.interpolated.escaping.just string.interpolated.escape.just
#                    ^^^^^^ source.just string.interpolated.escaping.just
#                          ^^ source.just string.interpolated.escaping.just string.interpolated.escape.just
#                            ^ source.just
#                             ^^ source.just string.interpolated.escaping.just string.interpolated.escape.just
#                               ^^^^^^^^ source.just string.interpolated.escaping.just
#                                       ^^ source.just string.interpolated.escaping.just string.interpolated.escape.just
>
>dep1: \
#^^^^ source.just entity.name.function.just
#    ^ source.just keyword.operator.recipe.end.just
#     ^^ source.just
>    # this comment is not part of the recipe body
#^^^^ source.just
#    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.just comment.line.number-sign.just
>  echo 'dep1'
#^^^^^^^ source.just
#       ^ source.just string.quoted.single.just string.quoted.single.just
#        ^^^^ source.just string.quoted.single.just
#            ^ source.just string.quoted.single.just
>
>dep2 \
#^^^^^^^ source.just
>  param:
#^^^^^^^^^ source.just
>    echo 'Dependency with parameter {{param}}'
#^^^^^^^^^ source.just
#         ^ source.just string.quoted.single.just string.quoted.single.just
#          ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.just string.quoted.single.just
#                                    ^^ source.just string.quoted.single.just string.interpolated.escaping.just string.interpolated.escape.just
#                                      ^^^^^ source.just string.quoted.single.just string.interpolated.escaping.just
#                                           ^^ source.just string.quoted.single.just string.interpolated.escaping.just string.interpolated.escape.just
#                                             ^ source.just string.quoted.single.just
>  
># Line continuation in interpolations
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.just comment.line.number-sign.just
>
>recipe:
#^^^^^^ source.just entity.name.function.just
#      ^ source.just keyword.operator.recipe.end.just
>  echo '{{ \
#^^^^^^^ source.just
#       ^ source.just string.quoted.single.just string.quoted.single.just
#        ^^^^^ source.just string.quoted.single.just
>  "This interpolation " + \
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.just string.quoted.single.just
>    "has a lot of text." \
#^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.just string.quoted.single.just
>  }}'
#^^^^ source.just string.quoted.single.just
#    ^ source.just string.quoted.single.just
>  echo 'back to recipe body'
#^^^^^^^ source.just
#       ^ source.just string.quoted.single.just string.quoted.single.just
#        ^^^^^^^^^^^^^^^^^^^ source.just string.quoted.single.just
#                           ^ source.just string.quoted.single.just